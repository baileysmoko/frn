{"ast":null,"code":"var _jsxFileName = \"/Users/baileysmoko/Desktop/frn/src/components/Button.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STYLES = ['btn--primary', 'btn--outline', 'btn--test'];\nconst SIZES = ['btn--medium', 'btn--large'];\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `btn ${checkButtonStyle} ${checkButtonSize}`,\n    onClick: onClick,\n    type: type,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n// Prop types validation for Button component\n_c = Button;\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n  onClick: PropTypes.func.isRequired,\n  buttonStyle: PropTypes.oneOf(STYLES).isRequired,\n  buttonSize: PropTypes.oneOf(SIZES).isRequired\n};\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","node","isRequired","oneOf","func","$RefreshReg$"],"sources":["/Users/baileysmoko/Desktop/frn/src/components/Button.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\n\nconst STYLES = ['btn--primary', 'btn--outline', 'btn--test'];\nconst SIZES = ['btn--medium', 'btn--large'];\n\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle)\n    ? buttonStyle\n    : STYLES[0];\n\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n\n  return (\n    <button\n      className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n      onClick={onClick}\n      type={type}\n    >\n      {children}\n    </button>\n  );\n};\n\n// Prop types validation for Button component\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  type: PropTypes.oneOf(['button', 'submit', 'reset']),\n  onClick: PropTypes.func.isRequired,\n  buttonStyle: PropTypes.oneOf(STYLES).isRequired,\n  buttonSize: PropTypes.oneOf(SIZES).isRequired,\n};\n\nexport default Button;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAG,CAAC,cAAc,EAAE,cAAc,EAAE,WAAW,CAAC;AAC5D,MAAMC,KAAK,GAAG,CAAC,aAAa,EAAE,YAAY,CAAC;AAE3C,OAAO,MAAMC,MAAM,GAAGA,CAAC;EACrBC,QAAQ;EACRC,IAAI;EACJC,OAAO;EACPC,WAAW;EACXC;AACF,CAAC,KAAK;EACJ,MAAMC,gBAAgB,GAAGR,MAAM,CAACS,QAAQ,CAACH,WAAW,CAAC,GACjDA,WAAW,GACXN,MAAM,CAAC,CAAC,CAAC;EAEb,MAAMU,eAAe,GAAGT,KAAK,CAACQ,QAAQ,CAACF,UAAU,CAAC,GAAGA,UAAU,GAAGN,KAAK,CAAC,CAAC,CAAC;EAE1E,oBACEF,OAAA;IACEY,SAAS,EAAG,OAAMH,gBAAiB,IAAGE,eAAgB,EAAE;IACxDL,OAAO,EAAEA,OAAQ;IACjBD,IAAI,EAAEA,IAAK;IAAAD,QAAA,EAEVA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;;AAED;AAAAC,EAAA,GAxBad,MAAM;AAyBnBA,MAAM,CAACe,SAAS,GAAG;EACjBd,QAAQ,EAAEN,SAAS,CAACqB,IAAI,CAACC,UAAU;EACnCf,IAAI,EAAEP,SAAS,CAACuB,KAAK,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;EACpDf,OAAO,EAAER,SAAS,CAACwB,IAAI,CAACF,UAAU;EAClCb,WAAW,EAAET,SAAS,CAACuB,KAAK,CAACpB,MAAM,CAAC,CAACmB,UAAU;EAC/CZ,UAAU,EAAEV,SAAS,CAACuB,KAAK,CAACnB,KAAK,CAAC,CAACkB;AACrC,CAAC;AAED,eAAejB,MAAM;AAAC,IAAAc,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}